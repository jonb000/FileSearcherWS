<!-- Test war project which signs a dependency and it's runtime dependencies. -->
<project>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>jar-mng-1130-1</artifactId>
  <groupId>org.apache.maven.plugins</groupId>
  <version>1.0</version>
  <packaging>pom</packaging>  <!-- pom when your project doesn't contain sources, jar otherwise -->
  <name>Test Case for MNG-1130</name>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo.webstart</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--outputDirectory></outputDirectory--> <!-- not required?? -->

          <!--
          Set to true to exclude all transitive dependencies. Default is false.
          -->
          <excludeTransitive>false</excludeTransitive>

          <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
          <libPath>lib</libPath>

          <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
          <dependencies>
            <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
            <includes>
              <include>commons-logging:commons-logging</include>
              <include>commons-cli:commons-cli</include>
            </includes>
            <!-- excludes>
              <exclude></exclude>
            <excludes-->
          </dependencies>

          <!--resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory--> <!-- default value -->

          <!-- JNLP generation -->
          <jnlp>
            <!-- default values -->
            <!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath-->
            <!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
            <outputFile>app.jnlp</outputFile> <!-- defaults to launch.jnlp -->

            <!-- used to automatically identify the jar containing the main class. -->
            <!-- this is perhaps going to change -->
            <mainClass>org.apache.commons.cli.BasicParser</mainClass>
          </jnlp>


          <!-- SIGNING -->
          <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
          <sign>
            <keystore>fillme</keystore>
            <keypass>fillme</keypass>  <!-- we need to override passwords easily from the command line. ${keypass} -->
            <storepass>fillme</storepass> <!-- ${storepass} -->
            <!--storetype>fillme</storetype-->
            <alias>fillme</alias>

            <!--validity>fillme</validity-->

            <!-- only required for generating the keystore -->
            <!--dnameCn>fillme</dnameCn>
            <dnameOu>fillme</dnameOu>
            <dnameO>fillme</dnameO>
            <dnameL>fillme</dnameL>
            <dnameSt>fillme</dnameSt>
            <dnameC>fillme</dnameC-->

            <verify>true</verify> <!-- verify that the signing operation succeeded -->

            <!-- KEYSTORE MANAGEMENT -->
            <keystoreConfig>
              <delete>true</delete> <!-- delete the keystore -->
              <gen>true</gen>       <!-- optional shortcut to generate the store. -->
            </keystoreConfig>
          </sign>

          <!-- BUILDING PROCESS -->

          <pack200>true</pack200>
          <gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

          <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
          <outputJarVersions>true</outputJarVersions>

          <!--install>false</install--> <!-- not yet supported -->
          <verbose>true</verbose>

        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.0</version>
    </dependency>
  </dependencies>
</project>

>

